PHASEX:  [P]hase [H]armonic [A]dvanced [S]ynthesis [EX]periment


MINIMUM REQUIREMENTS:
-------------------------------------------------------------------------------
	gcc-3.4
	gtk-2.4
	alsa-0.9.0
	jack-0.99.0
	libsamplerate-0.1.2
	lash-0.5.4
-------------------------------------------------------------------------------


COMPILING AND INSTALLING PHASEX:
-------------------------------------------------------------------------------

PHASEX uses the autoconf/automake build system, so all that is needed
is the usual:

	cd phasex-dev-m1
	./configure		(or ./configure --enable-arch=my-cpu)
	make
	make install

Errors and warnings from autoconf/automake can normally be cleaned up
by rebuilding all of the dynamically generated build files:

	aclocal
	autoconf
	automake
	autoheader

The --enable-arch= flag will take any CPU type supported by your gcc
version for its -march= and -mtune= optimization flags.

Architechtures currently supported:

	i386 i486 i586 pentium i686 pentium-mmx pentiumpro pentium2
	k6 winchip-c6 pentium3 pentium3m c3-2 pentium-m pentium4
	pentium4m k6-2 k6-3 winchip2 c3 geode athlon athlon-tbird
	athlon-4 athlon-mp athlon-xp k8 opteron athlon64 athlon-fx
	k8-sse3 opteron-sse3 athlon64-sse3 amdfam10 barcelona x86_64
	prescott nocona core2 amd64 itanium itanium1 merced itanium2
	mckinley ia64 ia32e atom generic native

If building with gcc-4.2 or newer, you may use --enable-arch=native
to optimize for your CPU.

To alter the CPU utilization of phasex, use the --enable-cpu-power=
flag.  Options are: 1 (slow CPU), 2 (average CPU), and 3 (fast CPU).

By default, 64-bit builds are enabled on 64-bit architectures.  To
force a 32-bit build on a 64-bit architecture (for a native 32-bit
build or cross-compiling for a 32-bit architecture), use the
--enable-32bit flag.

Additionally, you may add --enable-debug="-gwhatever" to pass debug
flags to the compiler.  When debug is enabled, the optimization level
is switched from -O3 to -O2, the -fomit-frame-pointer optimization is
removed, and -Wall (for all compiler warnings) is turned on.

To override or add extra compiler flags, set the CFLAGS environment
variable when running configure.

Examples:

./configure --enable-arch=atom --enable-32bit --enable-cpu-power=1

./configure --enable-arch=native --enable-debug=-ggdb3

For additional compile time tweaks, look at src/phasex.h.  All tunable
compile time settings are noted.

-------------------------------------------------------------------------------
